# Generated by Django 4.2.7 on 2023-12-01 04:43

from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='ProductGas',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.TextField(max_length=100)),
                ('imagen', models.ImageField(upload_to='static/img/Papahe/productos_gastronomicos/')),
                ('precio', models.IntegerField()),
                ('descripcion', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='ProductMed',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=100)),
                ('imagen', models.ImageField(upload_to='static/img/Papahe/productos_medicinales/')),
                ('farmacia', models.CharField(max_length=30)),
                ('posologia', models.CharField(max_length=256)),
                ('presentacion', models.CharField(max_length=50)),
                ('ingredientes', models.CharField(max_length=256)),
                ('descripcion', models.TextField()),
                ('categoria', models.CharField(choices=[('BAJAR DE PESO', 'Bajar de Peso'), ('RESFRIADO', 'Resfriado'), ('INFECCION URINARIA', 'Infección Urinaria'), ('MULTIVITAMÍNICO', 'Multivitamínico'), ('ENERGIZANTES', 'Energizantes'), ('COLON', 'Colon'), ('GÁSTRICOS', 'Gástricos'), ('ESTREÑIMIENTO', 'Estreñimiento'), ('TRANQUILIZANTES', 'Tranquilizantes'), ('INSOMNIO', 'Insomnio'), ('REUMÁTICOS', 'Reumáticos'), ('ÓSEOS', 'Óseos'), ('REGENERADORES', 'Regeneradores'), ('LIMPIADORES ORGÁNICOS', 'Limpiadores Orgánicos'), ('RENAL', 'Renal'), ('HEPATOPROTECTORES', 'Hepatoprotectores'), ('COLESTEROL Y TRIGLICÉRIDOS', 'Colesterol y Triglicéridos'), ('CONCENTRACIÓN', 'Concentración'), ('CIRCULACIÓN', 'Circulación'), ('HIPERTENSIÓN', 'Hipertensión'), ('DIABETES', 'Diabetes'), ('SALUD FEMENINA', 'Salud Femenina'), ('SALUD MASCULINA', 'Salud Masculina'), ('PRODUCTOS NATURALES', 'Productos Naturales'), ('SHAMPOO Y ACONDICIONADORES', 'Shampoo y Acondicionadores'), ('LOCIONES', 'Lociones'), ('', 'Sin Categoría')], default='', max_length=50)),
            ],
            options={
                'ordering': ['categoria', 'nombre'],
            },
        ),
        migrations.CreateModel(
            name='Catalogo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('catalogoType', models.BooleanField(default=False)),
                ('ProductGas', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='catalogo_app.productgas')),
                ('productMed', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='catalogo_app.productmed')),
            ],
        ),
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('username', models.CharField(max_length=50, unique=True)),
                ('tipo_usuario', models.CharField(choices=[('vendedor', 'Vendedor'), ('administrador', 'Administrador')], default='vendedor', max_length=15)),
                ('groups', models.ManyToManyField(blank=True, related_name='custom_user_set', to='auth.group')),
                ('user_permissions', models.ManyToManyField(blank=True, related_name='custom_user_set', to='auth.permission')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
        ),
    ]
